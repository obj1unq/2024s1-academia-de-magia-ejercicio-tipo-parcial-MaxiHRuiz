import academia.*

describe "Academia de Magia" {

	const pelota = new Cosa(volumen = 3, marca =  cuchuflito, esMagico = false, esReliquia = false )
	const escoba = new Cosa(volumen = 4, marca =  acme, esMagico = true, esReliquia = true )
	const varita = new Cosa(volumen = 1, marca =  fenix, esMagico = true, esReliquia = false)
	const pava = new Cosa(volumen = 2, marca = acme, esMagico = false, esReliquia = true)
	const lamparaAladino = new Cosa(volumen = 3, marca = fenix, esMagico = true, esReliquia = true)
	
	const baul = new Baul(volumenMaximo = 5, cosas = #{escoba}) 
	const gabineteMagico = new GabineteMagico(cosas = #{varita}, precio=6) 
	const armario = new Armario(cantidadMaxima = 2, cosas = #{pelota}) 
	const academia = new Academia(muebles = #{baul, gabineteMagico, armario}) 


  	test "punto 1.1 saber si está guardado algo" {
  		assert.equals(true, academia.contieneElemento(varita))
  		assert.equals(true, academia.contieneElemento(pelota))
  		assert.equals(true, academia.contieneElemento(escoba))
  		assert.equals(false, academia.contieneElemento(pava))
  		assert.equals(false, academia.contieneElemento(lamparaAladino))
  	}

  	test "punto 1.2, saber en que mueble esta guardado algo" {
  		assert.equals(true, gabineteMagico.tiene(varita))
  		assert.equals(true, armario.tiene(pelota))
  		assert.equals(true, baul.tiene(escoba))
  	}

  	test "punto 1.3, saber si se puede guardar algo" {
  		assert.equals(false, academia.puedeGuardar(varita))
  		assert.equals(false, academia.puedeGuardar(pelota))
  		assert.equals(false, academia.puedeGuardar(escoba))
  		assert.equals(true, academia.puedeGuardar(pava))
  		assert.equals(true, academia.puedeGuardar(lamparaAladino))
  		
  		armario.cantidadMaxima(1)
  		assert.equals(false, academia.puedeGuardar(pava))
  	}
  	
  	test "punto 1.4 saber en que muebles se puede guardar algo" {
  		assert.equals(#{armario}, academia.muebleDondeGuardar(pava))
  		assert.equals(#{armario,gabineteMagico}, academia.muebleDondeGuardar(lamparaAladino))
  	}

	test "punto 1.5. guardar una cosa" {
		assert.throwsException({academia.guardarElemento(escoba)})
		academia.guardarElemento(pava)
		assert.equals(true, academia.contieneElemento(pava))
		
		assert.equals(false, academia.contieneElemento(lamparaAladino))
		academia.guardarElemento(lamparaAladino)
		assert.equals(true, academia.contieneElemento(lamparaAladino))
		
		
		assert.throwsException({academia.guardarElemento(escoba)})
		assert.throwsException({academia.guardarElemento(pelota)})
		assert.throwsException({academia.guardarElemento(varita)})
	}
	
	test "punto 1.5 no poder guardar una cosa por culpa de que no hay mueble" {
		armario.cantidadMaxima(1)
		assert.throwsException({academia.guardarElemento(pava)})
		assert.throwsException({academia.guardarElemento(pava)})
	}
	
	test "punto 2.1 utilidad" {
		armario.guardar(pava)
		assert.equals(2, armario.cantidadDeCosasGuardadas())
		
		gabineteMagico.guardar(lamparaAladino)
		const baulMagico = new BaulMagico(volumenMaximo =12 , cosas = #{escoba, lamparaAladino})
		
		assert.equals(1.1, armario.utilidad())
		assert.equals(3, gabineteMagico.utilidad())
		assert.equals(4, baul.utilidad())
		assert.equals(5, baulMagico.utilidad())
	}
	

/*
 * 	test "punto 2.2 cosas menos utiles" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Verificar que las cosas menos útiles en la academia son la pelota, la varita y la escoba
 * 	}
 */
/*
 * 	test "punto 2.3 marca de cosa menos util" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Verificar que la marca menos útil de la academia es cuchuflito
 * 	}
 */
/*
 * 	test "punto 2.4 remover cosas menos utiles que no son magicas" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Remover las cosas menos útiles de la academia que no son mágicas
 * 		// TODO: Verificar que la varita está guardada en la academia
 * 		// TODO: Verificar que la pelota NO está guardada en la academia
 * 		// TODO: Verificar que la escoba está guardada en la academia
 * 		// TODO: Verificar que la pava está guardada en la academia
 * 		// TODO: Verificar que la lámpara está guardada en la academia
 * 	}
 */
/*
 * 	test "punto 2.4 imposible remover cosas menos utiles que no son magicas" {
 * 		// TODO: Hacer que la academia tenga solamente el armario y el baúl
 * 		// TODO: Remover las cosas menos útiles de la academia que no son mágicas (NO SE PUEDE!)
 * 	}
 */
}

